---
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Check if teleport is installed.
  stat: "path=/usr/local/bin/teleport"
  register: teleport_bin

- name: Uninstall teleport
  file:
    path: /usr/local/bin/teleport
    state: absent
  when: teleport_bin.stat.exists and teleport_clean_binary is true

- name: Re-check if teleport is installed.
  stat: "path=/usr/local/bin/teleport"
  register: teleport_bin

- name: Install make.
  package:
    name: make
    state: present

- name: Create temporary directory
  ansible.builtin.tempfile:
    state: directory
    suffix: teleport
  register: teleport_temp

- name: Unarchive teleport from remote
  ansible.builtin.unarchive:
    src: "{{ teleport_url }}"
    dest: "{{ teleport_temp.path }}"
    extra_opts: [--strip-components=1]
    remote_src: yes
  when: not teleport_bin.stat.exists and not teleport_local_path is defined

- name: Unarchive teleport from local
  ansible.builtin.unarchive:
    src: "{{ teleport_local_path }}"
    dest: "{{ teleport_temp.path }}"
    extra_opts: [--strip-components=1]
    remote_src: no
  when: not teleport_bin.stat.exists and teleport_local_path is defined

- name: Create license file directory
  file:
    path: /var/lib/teleport
    state: directory
    owner: "root"
    group: "root"
  become: yes
  when: teleport_license_file is defined and teleport_auth_enabled is true

- name: Copy license file
  template:
    src: "{{ teleport_license_file }}"
    dest:  /var/lib/teleport/license.pem
    owner: "root"
    group: "root"
    mode: 0400
  when: teleport_license_file is defined and teleport_auth_enabled is true

- name: Install teleport.
  ansible.builtin.command: ./install
  args:
    chdir: "{{ teleport_temp.path|quote }}"
  become: yes
  register: teleport_installed
  when: not teleport_bin.stat.exists

- name: Clean temporary directory
  file:
    path: "{{ teleport_temp.path }}"
    state: absent
  when: teleport_temp.path.stat.exists

- name: Create teleport config.
  template:
    src: "teleport.yaml.j2"
    dest: "{{ teleport_config_path }}"
    owner: "root"
    group: "root"
    mode: 0600

- name: Clean teleport cached items
  file:
    path: /var/lib/teleport
    state: absent
  become: yes
  when: teleport_clean_cache is true

- include_tasks: configure-Systemd.yml
  when: ansible_service_mgr == 'systemd'

- include_tasks: configure-Upstart.yml
  when: ansible_service_mgr == 'upstart'

- include_tasks: configure-Sysvinit.yml
  when: ansible_service_mgr == 'sysvinit'

- name: Ensure teleport has selected state and enabled on boot.
  service:
    name: 'teleport'
    state: 'started'
    enabled: yes
